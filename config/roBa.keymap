#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mkp_input_listener { input-processors = <&zip_temp_layer 5 250>; };

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
            layers = <0 1>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11>;
            layers = <0 1>;
        };

        japanese {
            bindings = <&kp LS(LG(LC(J)))>;
            key-positions = <18 19>;
            layers = <0>;
        };

        english {
            bindings = <&kp LS(LG(LC(K)))>;
            key-positions = <19 20>;
            layers = <0>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <38 39>;
            layers = <0 3 4 1>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <31 32>;
            layers = <0 1>;
        };

        check-keyid {
            bindings = <&none>;
            key-positions = <34 18 19 20 30 31 38>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_with_rotary_encoder: scroll_with_rotary_encoder {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "SCROLL_WITH_ROTARY_ENCODER";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp Q      &kp W         &kp E         &kp R           &kp T                                               &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D         &kp F           &kp G      &kp LS(LC(PRINTSCREEN))      &kp SQT     &kp H        &kp J  &kp K      &kp L    &lt 2 MINUS
&kp Z      &kp X         &kp C         &kp V           &kp B      &kp LEFT_SHIFT               &kp ESCAPE  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp SPACE  &kp BACKSPACE                &mo 3       &lt 4 ENTER                             &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &mo 2
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4  &mkp MB5  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&kp C_MUTE    &kp C_STOP      &kp C_PAUSE   &kp C_PLAY    &trans                            &trans  &trans    &trans    &trans    &trans
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&none         &none           &none         &trans        &trans        &trans      &trans  &trans  &mkp MB4  &mkp MB5  &trans    &trans
&bt BT_CLR    &bt BT_CLR_ALL  &bootloader   &trans        &trans        &trans      &trans  &trans                                &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION           &kp AT_SIGN   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp POUND                             &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
&kp DOLLAR                &kp PERCENT   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp CARET  &trans          &kp GRAVE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp EQUAL
&mt LEFT_SHIFT AMPERSAND  &kp ASTERISK  &kp LESS_THAN         &kp GREATER_THAN       &kp TILDE  &trans          &trans     &none           &none           &none         &none            &kp BACKSLASH
&trans                    &trans        &trans                &kp TAB                &trans     &kp DELETE      &trans     &trans                                                         &trans
            >;
        };

        NUMBER {
            bindings = <
&none         &none         &none         &none         &none                             &none            &none         &none         &none         &none
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &none       &none   &kp NUMBER_6     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_N4     &kp KP_N5     &none       &none   &kp KP_NUMBER_6  &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_N0
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                                                     &trans
            >;
        };

        CONFIG {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        disabled_ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        disabled_FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };
    };
};
